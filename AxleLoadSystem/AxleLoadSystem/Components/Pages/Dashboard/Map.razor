@page "/map"
@inherits BasePageComponent
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
@inject IStationService stationService
@rendermode InteractiveServer

<div class="row">
    <div class="col">
        <div class="img-overlay-wrap">
            <img src="./images/Bangladesh_High_Resolution.jpg">
            <svg id="svgMap" viewBox="0 0 1325 1872">
                @if (stations is not null)
                {
                    foreach (Station item in stations.Where(s => !string.IsNullOrEmpty(s.MapX)))
                    {
                        <g class="alcs" transform="matrix(1 0 0 1 @item.MapX @item.MapY)" 
                            data-id="@item.StationId" data-name="@item.StationName"
                           @onclick="(() => MapClicked(item))">
                            <rect width="150" height="50" style="fill:rgba(0,0,255,0.5);stroke-width:0;stroke:rgb(0,0,0)" rx="10" ry="10" />
                            <text class="bay-of-bengal" x="7" y="15" style="font-size:12pt;fill:white;">@item.StationName</text>
                        </g>
                    }
                }
            </svg>
        </div>
    </div>
    <div class="col">
        @if(station is not null)
        {
            @* <dl>
                <dt>Id</dt>
                <dd>@station.StationId</dd>
                <dt>Station</dt>
                <dd>@station.StationName</dd>
            </dl> *@
            <ALCSInformation Station="@station"></ALCSInformation>
        }
        else
        {
            <p class="info" >Click on Station to view information</p>
        }
    </div>
</div>

<style>
    #svgMap{
        /* border:1px solid red; */
    }
    .img-overlay-wrap {
        position: relative;
        display: inline-block; /* shrinks container to image size */
        transition: transform 150ms ease-in-out;
        /* width:500px; */
    }

    .img-overlay-wrap img { /* optional, for responsiveness */
        display: block;
        max-width: 100%;
        max-height: auto;
    }

    .img-overlay-wrap svg {
        position: absolute;
        top: 0;
        left: 0;
    }
</style>

        @code {
        private IEnumerable<Station> stations { get; set; }
        private Station station { get; set; }
        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            // Initialize the dialog events the first time th ecomponent is rendered
            if (firstRender)
            {
                // IJSObjectReference module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./js/map.js");
                // await module.InvokeVoidAsync("InitMap");
            }
        }
        protected override async Task OnInitializedAsync()
        {
            stations = await stationService.Get();

        }
        private void MapClicked(Station item)
        {
            station = item;
        }
}
