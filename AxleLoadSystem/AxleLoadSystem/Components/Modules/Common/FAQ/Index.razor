@page "/FAQ"
@inject IFAQService faqService
@inject IStringLocalizer<Locales.CommonPages> localizerCommon 

<PageTitleComponent Title="@localizerCommon["FAQ.Title"]">
    <div class="btn-group float-right">
        <AuthorizeView Roles="Admin">
            <Authorized>
                <a href="FAQ/Admin" class="btn btn-primary">@localizerCommon["FAQ.Link.AdminPage"]</a>
            </Authorized>
        </AuthorizeView>
        <AuthorizeView Roles="User">
            <Authorized>
                <a href="FAQ/User" class="btn btn-primary">@localizerCommon["FAQ.Link.MyQuestions"]</a>
            </Authorized>
        </AuthorizeView>
    </div>
</PageTitleComponent>

<div class="card">
    <div class="card-body card-primary card-outline" id="accordion">
        @if(faqs == null)
        {
            <Loader/>
        }
        else if(faqs.Count() == 0)
        {
            <p>No Data Found</p>
        }
        else
        {
            @foreach (FAQ faq in faqs.Where(f => f.IsPublished).OrderBy(f => f.DisplayOrder))
            {
                <div class="card card-primary card-outline">
                    <a class="d-block w-100 collapsed" data-toggle="collapse" href="@("#collapse" + @faq.Id)" aria-expanded="true">
                        <div class="card-header">
                            <h4 class="card-title w-100">
                                @((MarkupString)faq.Question)
                            </h4>
                        </div>
                    </a>
                    <div id="@("collapse" + @faq.Id)" class="collapse" data-parent="#accordion" style="">
                        <div class="card-body">
                            @((MarkupString)faq.Answer)
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@code {
    private IEnumerable<FAQ>? faqs { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        faqs = await faqService.GetFAQs();
    }
}
