@page "/stationaccess"
@inject IUserService userService
@inject IStationService stationService
@inject IStringLocalizer<Locales.Station> localizer
@inject IStringLocalizer<Locales.Resource> localizerResource

<h3>Station Access</h3>
<div class="box">
    <div class="box-body">
        <div class="row">
            @if (users is not null)
            {
                <div class="col-md-12">
                    <label>List of Users</label>
                    <select class="form-control" @bind="@userId">
                        <option value="0">-Select User-</option>
                        @foreach (User user in users)
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    </select>
                </div>

            }
            @if (stations is not null)
            {
                <div class="col-md-12">
                    <label for="stations" class="form-label">@localizer["ListofStation"]</label>
                    <div class="form-control">
                        @foreach (Station station in stations)
                        {
                            string value = station.StationId.ToString() ?? "";
                            bool check = selectedStations.Contains(value);
                            <div class="icheck-primary d-inline">
                                <input type="checkbox" id="checkId@(value)" checked="@check" @onchange="eventArgs => { CheckboxClicked(value, eventArgs.Value); }" />
                                <label for="checkId@(station.StationId)">@station.StationName</label>
                            </div>
                        }
                    </div>
                </div>
            }
            
            <div class="col-md-12">
                <div class="form-group btn btn-group">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <NavLink class="btn btn-primary" href="/">@localizerResource["Button.Back"]</NavLink>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private IEnumerable<User?> users { get; set; }
    private IEnumerable<Station?> stations { get; set; }

    private int userId { get; set; } = 0;
    private int stationId { get; set; }
    private bool approve { get; set; }
    private List<string> selectedStations = new();

    protected override async Task OnInitializedAsync()
    {
        users = await userService.GetUsers();
        stations = await stationService.Get();
    }

    public void CheckboxClicked(string aSelectedId, object aChecked)
    {
        if ((bool)aChecked)
        {
            if (!selectedStations.Contains(aSelectedId))
            {
                selectedStations.Add(aSelectedId);
            }
        }
        else
        {
            if (selectedStations.Contains(aSelectedId))
            {
                selectedStations.Remove(aSelectedId);
            }
        }
    }
}
