@using Microsoft.AspNetCore.Components.QuickGrid
@using Syncfusion.Blazor.Grids
@using BOL

<div class="grid">
    @if (File.FileType == 1)
    {
        <QuickGrid Items="@AxleLoadData" Virtualize="true">
            <PropertyColumn Property="@(l => l.TransactionNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.LaneNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.DateTime)" Format="yyyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="@(l => l.PlateZone)" Sortable="true" />
            <PropertyColumn Property="@(l => l.PlateSeries)" Sortable="true" />
            <PropertyColumn Property="@(l => l.PlateNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.NumberOfAxle)" Sortable="true" />
            <PropertyColumn Property="@(l => l.VehicleSpeed)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle1)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle2)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle3)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle4)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle5)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle6)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle7)" Sortable="true" />
            <PropertyColumn Property="@(l => l.AxleRemaining)" Sortable="true" />
            <PropertyColumn Property="@(l => l.GrossVehicleWeight)" Sortable="true" />
            <PropertyColumn Property="@(l => l.IsUnloaded)" Sortable="true" />
            <PropertyColumn Property="@(l => l.IsOverloaded)" Sortable="true" />
            <PropertyColumn Property="@(l => l.OverSizedModified)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Wheelbase)" Sortable="true" />
            <PropertyColumn Property="@(l => l.ClassStatus)" Sortable="true" />
            <PropertyColumn Property="@(l => l.RecognizedBy)" Sortable="true" />
            <PropertyColumn Property="@(l => l.IsBRTAInclude)" Sortable="true" />
            <PropertyColumn Property="@(l => l.LadenWeight)" Sortable="true" />
            <PropertyColumn Property="@(l => l.UnladenWeight)" Sortable="true" />
            <PropertyColumn Property="@(l => l.ReceiptNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.BillNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle1Time)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle2Time)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle3Time)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle4Time)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle5Time)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle6Time)" Sortable="true" />
            <PropertyColumn Property="@(l => l.Axle7Time)" Sortable="true" />
        </QuickGrid>
    }
    else
    {
        <QuickGrid Items="@FineRepaymentData" Virtualize='true'>
            <PropertyColumn Property="@(l => l.LaneNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.TransactionNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.PaymentTransactionId)" Sortable="true" />
            <PropertyColumn Property="@(l => l.DateTime)" Format="yyyy-MM-dd" Sortable="true" />
            <PropertyColumn Property="@(l => l.IsPaid)" Sortable="true" />
            <PropertyColumn Property="@(l => l.FineAmount)" Sortable="true" />
            <PropertyColumn Property="@(l => l.PaymentMethod)" Sortable="true" />
            <PropertyColumn Property="@(l => l.ReceiptNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.BillNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.WarehouseCharge)" Sortable="true" />
            <PropertyColumn Property="@(l => l.DriversLicenseNumber)" Sortable="true" />
            <PropertyColumn Property="@(l => l.TransportAgencyInformation)" Sortable="true" />
        </QuickGrid>

        @* <SfGrid ID="Grid" @ref="FinePaymentGrid" DataSource="@FineRepaymentData" AllowSorting="true" Toolbar="@(new List<string>() { "ExcelExport" })" AllowExcelExport="true" AllowPaging="true" >
                <GridColumn Field="@nameof(FinePayment.LaneNumber)" HeaderText="Lane Number"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.TransactionNumber)" HeaderText="Transaction Number"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.PaymentTransactionId)" HeaderText="Payment Transaction Id"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.DateTime)" HeaderText="Date Time" Format="yyyy-MM-dd" Width="100"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.IsPaid)" HeaderText="IsPaid"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.FineAmount)" HeaderText="Fine Amount"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.PaymentMethod)" HeaderText="Payment Method" ></GridColumn>
                <GridColumn Field="@nameof(FinePayment.ReceiptNumber)" HeaderText="Receipt Number" ></GridColumn>
                <GridColumn Field="@nameof(FinePayment.BillNumber)" HeaderText="Bill Number"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.WarehouseCharge)" HeaderText="Warehouse Charge"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.DriversLicenseNumber)" HeaderText="Drivers License Number" Width="150"></GridColumn>
                <GridColumn Field="@nameof(FinePayment.TransportAgencyInformation)" HeaderText="Transport Agency Information" Width="150"></GridColumn>
        </SfGrid> *@
    }
</div>

@code {
    [Parameter]
    public UploadedFile File { get; set; }
    [Parameter]
    public Station Station { get; set; }
    [Parameter]
    public IQueryable<LoadData> AxleLoadData { get; set; }
    [Parameter]
    public IQueryable<FinePayment> FineRepaymentData { get; set; }

    private SfGrid<FinePayment> FinePaymentGrid;

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_excelexport") //Id is combination of Grid's ID and itemname
        {
            ExcelExportProperties ExportProperties = new ExcelExportProperties();
            ExportProperties.IncludeHiddenColumn = true;
            await this.FinePaymentGrid.ExcelExport(ExportProperties);
            // PdfExportProperties pdfExportProperties = new PdfExportProperties();
            // pdfExportProperties.AllowHorizontalOverflow = true;
            // await this.FinePaymentGrid.ExportToPdfAsync(pdfExportProperties);
        }
    }
}
